pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = "deepak158/flask-app"
        KUBECONFIG = "/home/ubuntu/.kube/config"
        NAMESPACE = "flask-app"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/deepakkishor15/DevopsEKS_project.git'
            }
        }

        stage('Install Dependencies & Run Tests') {
            steps {
                sh '''
                set -e
                python3 -m venv venv
                source venv/bin/activate
                pip install -r requirements.txt
                pytest
                '''
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-credentialsid', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_HUB_TOKEN')]) {
                    sh '''
                    docker build -t ${DOCKER_HUB_REPO}:${BUILD_NUMBER} .
                    docker tag ${DOCKER_HUB_REPO}:${BUILD_NUMBER} ${DOCKER_HUB_REPO}:latest
                    echo ${DOCKER_HUB_TOKEN} | docker login -u ${DOCKER_USER} --password-stdin
                    docker push ${DOCKER_HUB_REPO}:${BUILD_NUMBER}
                    docker push ${DOCKER_HUB_REPO}:latest
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh '''
                echo "Applying Kubernetes manifests..."
                kubectl apply -f kubernetes/namespace.yaml || echo "Namespace already exists"
                kubectl apply -f kubernetes/deployment.yaml
                kubectl apply -f kubernetes/service.yaml

                echo "Restarting deployment..."
                kubectl rollout restart deployment -n ${NAMESPACE}
                '''
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
