pipeline {
    agent any

    environment {
        AWS_REGION = "us-west-2"
        DOCKER_IMAGE = "dockerid/devopseks_project"
        DOCKER_CREDENTIALS_ID = "docker-hub-credentials"
        AWS_CREDENTIALS_ID = "aws-credentials"
        KUBECONFIG_PATH = "$HOME/.kube/config"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/deepakkishor15/DevopsEKS_project.git'
            }
        }

        stage('Install Dependencies & Run Tests') {
            steps {
                sh '''
                    set -e
                    python3 -m venv venv
                    source venv/bin/activate
                    pip install -r requirements.txt
                    pytest || true  # Allow pipeline to continue even if tests fail
                '''
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        sh '''
                            docker build -t $DOCKER_IMAGE:latest .
                            docker push $DOCKER_IMAGE:latest
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                    sh '''
                        aws eks --region $AWS_REGION update-kubeconfig --name my-eks-cluster
                        kubectl apply -f k8s/deployment.yaml
                        kubectl apply -f k8s/service.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully!"
        }
        failure {
            echo "Pipeline failed! Check logs for errors."
        }
    }
}
